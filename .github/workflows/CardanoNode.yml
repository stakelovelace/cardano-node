name: Docker Image Cardano Node
on:
  workflow_dispatch:
  push:
    paths:
      - 'Dockerfile'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Docker login
      run: |
        docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}  
    - name: Dockerfile Download
      run: |
        curl -sLo DockerNode https://raw.githubusercontent.com/stakelovelace/cardano-node/master/Dockerfile
    - name: Compiling new node software
      run: |      
        docker build . --file DockerNode --compress --tag stakelovelace/cardano-node:latest
    - name: Docker push
      run: |
        docker push stakelovelace/cardano-node:latest
    - name: Install Docker Scout
      run: |
        curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
        sh install-scout.sh
    - name: Handle Docker Scout results
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Run Docker Scout and save the output to a file
        echo -e "\n ------------------------------------------------------- \n" > docker_scout_results.txt
        echo -e "\n ------ DOCKER SCOUT RESULTS------- \n" >> docker_scout_results.txt
        echo -e "\n ------------------------------------------------------- \n" >> docker_scout_results.txt
        docker scout quickview stakelovelace/cardano-node:latest >> docker_scout_results.txt
        echo -e "\n ------------------------------------------------------- \n" >> docker_scout_results.txt
        docker scout cves stakelovelace/cardano-node:latest >> docker_scout_results.txt
        echo -e "\n ------------------------------------------------------- \n" >> docker_scout_results.txt
        docker scout recommendations stakelovelace/cardano-node:latest >> docker_scout_results.txt
        echo -e "\n ------------------------------------------------------- \n" >> docker_scout_results.txt

        # Read the Docker Scout results file
        result=$(cat docker_scout_results.txt)

        # Prepare the issue body with preserved line breaks
        issue_body=$(sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g' docker_scout_results.txt)
        
        # Publish the results as a GitHub issue
        gh issue create --title "Docker Scout Results" --body "$issue_body"
        
        # Echo the result for debugging (optional)
        echo "$result"
        
        # Update the Docker Hub repository description
        api_url="https://hub.docker.com/v2/repositories/${username}/${repository}"
        access_token=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${{ secrets.DOCKER_USER }}", "password": "${{ secrets.DOCKER_PASSWORD }}"}' https://hub.docker.com/v2/users/login/ | jq -r .token)
        curl -s -H "Authorization: JWT $access_token" -H "Content-Type: application/json" -X PATCH -d '{"description": "$result"}' "$api_url/"
